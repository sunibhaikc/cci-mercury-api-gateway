# -*- coding: utf-8 -*-

"""
ccimercuryapigatewaypostman

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from ccimercuryapigatewaypostman.api_helper import APIHelper
from ccimercuryapigatewaypostman.models.template_filter_drop_down_request import TemplateFilterDropDownRequest


class DropDownControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(DropDownControllerTests, cls).setUpClass()
        cls.controller = cls.client.drop_down
        cls.response_catcher = cls.controller.http_call_back

    # Todo: Add description for test test_template_filter_drop_down
    def test_template_filter_drop_down(self):
        # Parameters for the API call
        accept = 'application/json'
        body = APIHelper.json_deserialize('{"userId":"C36701","type":"SLOB","parentId":"1200145,1200023,12002'
            '47,1200021,1200024,1200226,1200306,1200165,1200125,1200248,1200022'
            ',1200308,1200206,1200085,1200086,1200065,1200025,1200307,1200227,1'
            '200001,1200105,1200185,1200107,1200087,1200106,1200327"}', TemplateFilterDropDownRequest.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.template_filter_drop_down(accept, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = None

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Todo: Add description for test test_template_filter_drop_down_1
    def test_template_filter_drop_down_1(self):
        # Parameters for the API call
        accept = 'application/json'

        # Perform the API call through the SDK function
        result = self.controller.template_filter_drop_down_1(accept)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = None
        expected_headers['access-control-allow-origin'] = None
        expected_headers['access-control-allow-methods'] = None
        expected_headers['access-control-allow-headers'] = None

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

