# -*- coding: utf-8 -*-

"""
ccimercuryapigatewaypostman

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from ccimercuryapigatewaypostman.api_helper import APIHelper
from ccimercuryapigatewaypostman.models.template_filter_edit_template_request import TemplateFilterEditTemplateRequest


class EditTemplateControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(EditTemplateControllerTests, cls).setUpClass()
        cls.controller = cls.client.edit_template
        cls.response_catcher = cls.controller.http_call_back

    # Todo: Add description for test test_template_filter_edit_template
    def test_template_filter_edit_template(self):
        # Parameters for the API call
        accept = 'application/json'
        body = APIHelper.json_deserialize('{"userId":"C36701","tempName":"Templatefilter","orgIds":"0","orgDe'
            'sc":"ALL","lobIds":"0","lobDesc":"ALL","slobIds":"0","slobDesc":"A'
            'LL","fgIds":"0","fgDesc":"ALL","sfgIds":"1501161,1501001,1501241,1'
            '500441,1500981,1501061,1501181,1501301,1500501","sfgDesc":"3rd Par'
            'ty Sales Support,ASC,Advanced Convention Services - Service Desk,A'
            'dvanced Service Center,Agency Recovery Management,Bulk Owner Suppo'
            'rt,CB Access Transport Tech,CB Fulfillment,CB Network Provisioning'
            '","funcIds":"1600427,1600429,1613419,1631354,1610793,1632938,16214'
            '95,1606337","funcDesc":"Accessibility Billing,Accessibility Tech,A'
            'gency Recovery Management,Agent Transfer Comm Center Missed Go Bac'
            'k,Alarm.com,Activation Support,Account Compromised 1,Advanced Conv'
            'ention Services - Service Desk","lngIds":"1100026,1249,1100024,110'
            '0021,1003,1100028,1182,1100045,1045","lngDesc":"Bangla,Bhojpuri1,B'
            'ravvo,English,French,INDIA,KILKI1,Karanjohar,Lang","custRegIds":"0'
            '","custRegDesc":"ALL","coeIds":"0","coeDesc":"ALL","templateId":"7'
            '33"}', TemplateFilterEditTemplateRequest.from_dictionary)

        # Perform the API call through the SDK function
        result = self.controller.template_filter_edit_template(accept, body)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = None

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # Todo: Add description for test test_template_filter_edit_template_1
    def test_template_filter_edit_template_1(self):
        # Parameters for the API call
        accept = 'application/json'

        # Perform the API call through the SDK function
        result = self.controller.template_filter_edit_template_1(accept)

        # Test response code
        assert self.response_catcher.response.status_code == 200

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = None
        expected_headers['access-control-allow-origin'] = None
        expected_headers['access-control-allow-methods'] = None
        expected_headers['access-control-allow-headers'] = None

        assert ComparisonHelper.match_headers(expected_headers, self.response_catcher.response.headers)

        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

