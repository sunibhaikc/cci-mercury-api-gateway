# -*- coding: utf-8 -*-

"""
ccimercuryapigatewaypostman

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class TemplateFilterEditTemplateRequest(object):

    """Implementation of the '/templateFilter/editTemplateRequest' model.

    TODO: type model description here.

    Attributes:
        user_id (str): TODO: type description here.
        temp_name (str): TODO: type description here.
        org_ids (str): TODO: type description here.
        org_desc (str): TODO: type description here.
        lob_ids (str): TODO: type description here.
        lob_desc (str): TODO: type description here.
        slob_ids (str): TODO: type description here.
        slob_desc (str): TODO: type description here.
        fg_ids (str): TODO: type description here.
        fg_desc (str): TODO: type description here.
        sfg_ids (str): TODO: type description here.
        sfg_desc (str): TODO: type description here.
        func_ids (str): TODO: type description here.
        func_desc (str): TODO: type description here.
        lng_ids (str): TODO: type description here.
        lng_desc (str): TODO: type description here.
        cust_reg_ids (str): TODO: type description here.
        cust_reg_desc (str): TODO: type description here.
        coe_ids (str): TODO: type description here.
        coe_desc (str): TODO: type description here.
        template_id (str): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "user_id": 'userId',
        "temp_name": 'tempName',
        "org_ids": 'orgIds',
        "org_desc": 'orgDesc',
        "lob_ids": 'lobIds',
        "lob_desc": 'lobDesc',
        "slob_ids": 'slobIds',
        "slob_desc": 'slobDesc',
        "fg_ids": 'fgIds',
        "fg_desc": 'fgDesc',
        "sfg_ids": 'sfgIds',
        "sfg_desc": 'sfgDesc',
        "func_ids": 'funcIds',
        "func_desc": 'funcDesc',
        "lng_ids": 'lngIds',
        "lng_desc": 'lngDesc',
        "cust_reg_ids": 'custRegIds',
        "cust_reg_desc": 'custRegDesc',
        "coe_ids": 'coeIds',
        "coe_desc": 'coeDesc',
        "template_id": 'templateId'
    }

    def __init__(self,
                 user_id=None,
                 temp_name=None,
                 org_ids=None,
                 org_desc=None,
                 lob_ids=None,
                 lob_desc=None,
                 slob_ids=None,
                 slob_desc=None,
                 fg_ids=None,
                 fg_desc=None,
                 sfg_ids=None,
                 sfg_desc=None,
                 func_ids=None,
                 func_desc=None,
                 lng_ids=None,
                 lng_desc=None,
                 cust_reg_ids=None,
                 cust_reg_desc=None,
                 coe_ids=None,
                 coe_desc=None,
                 template_id=None):
        """Constructor for the TemplateFilterEditTemplateRequest class"""

        # Initialize members of the class
        self.user_id = user_id 
        self.temp_name = temp_name 
        self.org_ids = org_ids 
        self.org_desc = org_desc 
        self.lob_ids = lob_ids 
        self.lob_desc = lob_desc 
        self.slob_ids = slob_ids 
        self.slob_desc = slob_desc 
        self.fg_ids = fg_ids 
        self.fg_desc = fg_desc 
        self.sfg_ids = sfg_ids 
        self.sfg_desc = sfg_desc 
        self.func_ids = func_ids 
        self.func_desc = func_desc 
        self.lng_ids = lng_ids 
        self.lng_desc = lng_desc 
        self.cust_reg_ids = cust_reg_ids 
        self.cust_reg_desc = cust_reg_desc 
        self.coe_ids = coe_ids 
        self.coe_desc = coe_desc 
        self.template_id = template_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        user_id = dictionary.get("userId") if dictionary.get("userId") else None
        temp_name = dictionary.get("tempName") if dictionary.get("tempName") else None
        org_ids = dictionary.get("orgIds") if dictionary.get("orgIds") else None
        org_desc = dictionary.get("orgDesc") if dictionary.get("orgDesc") else None
        lob_ids = dictionary.get("lobIds") if dictionary.get("lobIds") else None
        lob_desc = dictionary.get("lobDesc") if dictionary.get("lobDesc") else None
        slob_ids = dictionary.get("slobIds") if dictionary.get("slobIds") else None
        slob_desc = dictionary.get("slobDesc") if dictionary.get("slobDesc") else None
        fg_ids = dictionary.get("fgIds") if dictionary.get("fgIds") else None
        fg_desc = dictionary.get("fgDesc") if dictionary.get("fgDesc") else None
        sfg_ids = dictionary.get("sfgIds") if dictionary.get("sfgIds") else None
        sfg_desc = dictionary.get("sfgDesc") if dictionary.get("sfgDesc") else None
        func_ids = dictionary.get("funcIds") if dictionary.get("funcIds") else None
        func_desc = dictionary.get("funcDesc") if dictionary.get("funcDesc") else None
        lng_ids = dictionary.get("lngIds") if dictionary.get("lngIds") else None
        lng_desc = dictionary.get("lngDesc") if dictionary.get("lngDesc") else None
        cust_reg_ids = dictionary.get("custRegIds") if dictionary.get("custRegIds") else None
        cust_reg_desc = dictionary.get("custRegDesc") if dictionary.get("custRegDesc") else None
        coe_ids = dictionary.get("coeIds") if dictionary.get("coeIds") else None
        coe_desc = dictionary.get("coeDesc") if dictionary.get("coeDesc") else None
        template_id = dictionary.get("templateId") if dictionary.get("templateId") else None
        # Return an object of this model
        return cls(user_id,
                   temp_name,
                   org_ids,
                   org_desc,
                   lob_ids,
                   lob_desc,
                   slob_ids,
                   slob_desc,
                   fg_ids,
                   fg_desc,
                   sfg_ids,
                   sfg_desc,
                   func_ids,
                   func_desc,
                   lng_ids,
                   lng_desc,
                   cust_reg_ids,
                   cust_reg_desc,
                   coe_ids,
                   coe_desc,
                   template_id)
