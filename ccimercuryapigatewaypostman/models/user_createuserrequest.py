# -*- coding: utf-8 -*-

"""
ccimercuryapigatewaypostman

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class UserCreateuserrequest(object):

    """Implementation of the '/user/createuserrequest' model.

    TODO: type model description here.

    Attributes:
        user_id (str): TODO: type description here.
        user_samaccountname (str): TODO: type description here.
        user_upn (str): TODO: type description here.
        user_displayname (str): TODO: type description here.
        user_name (str): TODO: type description here.
        user_jobtitle (str): TODO: type description here.
        user_manager (str): TODO: type description here.
        user_mail (str): TODO: type description here.
        user_location (str): TODO: type description here.
        user_company (str): TODO: type description here.
        created_by (str): TODO: type description here.
        user_role (List[str]): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "user_id": 'User_Id',
        "user_samaccountname": 'User_Samaccountname',
        "user_upn": 'User_Upn',
        "user_displayname": 'User_Displayname',
        "user_name": 'User_Name',
        "user_jobtitle": 'User_Jobtitle',
        "user_manager": 'User_Manager',
        "user_mail": 'User_Mail',
        "user_location": 'User_Location',
        "user_company": 'User_Company',
        "created_by": 'Created_By',
        "user_role": 'User_Role'
    }

    def __init__(self,
                 user_id=None,
                 user_samaccountname=None,
                 user_upn=None,
                 user_displayname=None,
                 user_name=None,
                 user_jobtitle=None,
                 user_manager=None,
                 user_mail=None,
                 user_location=None,
                 user_company=None,
                 created_by=None,
                 user_role=None):
        """Constructor for the UserCreateuserrequest class"""

        # Initialize members of the class
        self.user_id = user_id 
        self.user_samaccountname = user_samaccountname 
        self.user_upn = user_upn 
        self.user_displayname = user_displayname 
        self.user_name = user_name 
        self.user_jobtitle = user_jobtitle 
        self.user_manager = user_manager 
        self.user_mail = user_mail 
        self.user_location = user_location 
        self.user_company = user_company 
        self.created_by = created_by 
        self.user_role = user_role 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        user_id = dictionary.get("User_Id") if dictionary.get("User_Id") else None
        user_samaccountname = dictionary.get("User_Samaccountname") if dictionary.get("User_Samaccountname") else None
        user_upn = dictionary.get("User_Upn") if dictionary.get("User_Upn") else None
        user_displayname = dictionary.get("User_Displayname") if dictionary.get("User_Displayname") else None
        user_name = dictionary.get("User_Name") if dictionary.get("User_Name") else None
        user_jobtitle = dictionary.get("User_Jobtitle") if dictionary.get("User_Jobtitle") else None
        user_manager = dictionary.get("User_Manager") if dictionary.get("User_Manager") else None
        user_mail = dictionary.get("User_Mail") if dictionary.get("User_Mail") else None
        user_location = dictionary.get("User_Location") if dictionary.get("User_Location") else None
        user_company = dictionary.get("User_Company") if dictionary.get("User_Company") else None
        created_by = dictionary.get("Created_By") if dictionary.get("Created_By") else None
        user_role = dictionary.get("User_Role") if dictionary.get("User_Role") else None
        # Return an object of this model
        return cls(user_id,
                   user_samaccountname,
                   user_upn,
                   user_displayname,
                   user_name,
                   user_jobtitle,
                   user_manager,
                   user_mail,
                   user_location,
                   user_company,
                   created_by,
                   user_role)
